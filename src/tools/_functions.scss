/* stylelint-disable plugin/docs-required */

// This function returns a rems value based on the given pixels.

// Our approach has been that given our browser support requirements (IE9 and up),
// rems is the preferred option for sizing elements, and in particular typography.
// This is because it is more accessible, supporting the browser font sizing options.
// For more information: http://engageinteractive.co.uk/blog/em-vs-rem-vs-px
@function sb-px2rems($px) {
  $base-font-size: 16px;

  @return ($px / $base-font-size) * 1rem;
}

// This function returns a rems value based on the given size keyword (eg: 'xs', 's')
@function sb-rem-spacing($size) {
  $px: map-get($sb-spacing-map, '-#{$size}');

  @return sb-px2rems($px);
}

// This mixin creates color classes out of the given color map
@mixin sb-colors-from-color-map($color-array) {
  @each $color, $color-value in $color-array {
    .#{$ns}color-#{$color} {
      color: $color-value;
    }
  }
}

@mixin sb-clearfix() {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin sb-offset-size($grid-columns, $default-gutter, $size) {
  @for $i from 1 through $grid-columns {
    .#{$ns}offset-#{$size}-#{$i} {
      margin-left: calc((100% / #{$grid-columns}) * #{$i} + (#{$default-gutter} / 2));
    }
  }
}
