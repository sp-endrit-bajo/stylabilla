/* stylelint-disable declaration-no-important */
/* stylelint-disable max-nesting-depth */

// Grid
//
// A basic grid. Apply `sb-grid` to the wrapper element.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-padding sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-padding sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-padding sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-padding sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-padding sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-padding sb-col-4">
//     .sb-col-4
//   </div>
// </div>
//
// Styleguide grid

$gutter-width: sb-px2rems(23px);

.#{$ns}grid {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -calc(#{$gutter-width} / 2);
}

// Containers
//
// Two container classes. All page containers should use `sb-container` which is set to a max-width of 1920px. You can also use `sb-container-fluid` for full width containers.
//
// Markup:
// <div class="sb-container sb-tile sb-padding">
//   .sb-container
// </div>
// <div class="sb-container-fluid sb-tile sb-padding">
//   .sb-container-fluid
// </div>
//
// Styleguide grid.containers

.#{$ns}container {
  max-width: sb-px2rems($sb-container);
  width: 100%;
}

.#{$ns}container-fluid {
  width: 100%;
}

// Columns
//
// Column classes. Use `sb-col-#{i}` to set the desired column width.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-padding sb-col-12">
//     .sb-col-12
//   </div>
//   <div class="sb-tile sb-padding sb-col-10">
//     .sb-col-10
//   </div>
//   <div class="sb-tile sb-padding sb-col-2">
//     .sb-col-2
//   </div>
//   <div class="sb-tile sb-padding sb-col-9">
//     .sb-col-9
//   </div>
//   <div class="sb-tile sb-padding sb-col-3">
//     .sb-col-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-8">
//     .sb-col-8
//   </div>
//   <div class="sb-tile sb-padding sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-padding sb-col-7">
//     .sb-col-7
//   </div>
//   <div class="sb-tile sb-padding sb-col-5">
//     .sb-col-5
//   </div>
//   <div class="sb-tile sb-padding sb-col-6">
//     .sb-col-6
//   </div>
//   <div class="sb-tile sb-padding sb-col-6">
//     .sb-col-6
//   </div>
// </div>
//
// Styleguide grid.columns

$grid-columns: 12;

[class*='#{$ns}col-'],
[class*='#{$ns}col_'],
[class~='#{$ns}col'] {
  flex-shrink: 0;
  flex-grow: 1;
  max-width: 100%;
}

@mixin sb-grid-item($grid-item-number, $gutter-value: $gutter-width) {
  flex-basis: calc(((100% / #{$grid-columns}) * #{$grid-item-number}) - #{$gutter-value});
  margin: 0 calc(#{$gutter-value} / 2) $gutter-value;
}

@for $i from 1 through $grid-columns {
  .#{$ns}col-#{$i} {
    @include sb-grid-item(#{$i});
  }
}

// Responsive Grid
//
// To create a responsive grid you can add different column classes for different viewports. <br/>
// Add a `sb-col-s-#{i}` to set the desired column width for smaller viewports. <br/>
// Add a `sb-col-m-#{i}` to set the desired column width for medium viewports. <br/>
// Add a `sb-col-l-#{i}` to set the desired column width for larger viewports.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-s-12 sb-col-m-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
// </div>
//
// Styleguide grid.responsive

@for $i from 1 through $grid-columns {
  @media (max-width: $sb-breakpoint-s) {
    .#{$ns}col-s-#{$i} {
      @include sb-grid-item(#{$i});
    }
  }

  @media (min-width: $sb-breakpoint-s) and (max-width: $sb-breakpoint-l) {
    .#{$ns}col-m-#{$i} {
      @include sb-grid-item(#{$i});
    }
  }

  @media (min-width: $sb-breakpoint-l) {
    .#{$ns}col-l-#{$i} {
      @include sb-grid-item(#{$i});
    }
  }
}

// Gutter
//
// Gutter modifier classes. Use `sb-grid--gutter-#{gutter}` to set the desired space between columns.
//
// Markup:
// <div class="sb-grid {{modifier_class}}">
//   <div class="sb-tile sb-padding sb-col-6">
//     .sb-col-6
//   </div>
//   <div class="sb-tile sb-padding sb-col-6">
//     .sb-col-6
//   </div>
//   <div class="sb-tile sb-padding sb-col-3">
//     .sb-col-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-3">
//     .sb-col-3
//   </div>
//   <div class="sb-tile sb-padding sb-col-3">
//     .sb-col-3
//   </div>
// </div>
//
// .sb-grid--gutter-0   - No gutter
// .sb-grid--gutter-xs  - Extra Small gutter
// .sb-grid--gutter-s   - Small gutter
// .sb-grid--gutter-m   - Medium gutter
//
// Styleguide grid.gutter

$sb-gutter-map: ('-0': 0, '-xs': 7px, '-s': 11px, '-m': 16px);

@each $suffix, $spacing in $sb-gutter-map {
  .#{$ns}grid--gutter#{$suffix} {
    margin: 0 -calc(#{$spacing} / 2);

    @for $i from 1 through $grid-columns {
      .#{$ns}col-#{$i} {
        @include sb-grid-item(#{$i}, $spacing);
      }

      @media (max-width: $sb-breakpoint-s) {
        .#{$ns}col-s-#{$i} {
          @include sb-grid-item(#{$i}, $spacing);
        }
      }

      @media (min-width: $sb-breakpoint-s) and (max-width: $sb-breakpoint-l) {
        .#{$ns}col-m-#{$i} {
          @include sb-grid-item(#{$i}, $spacing);
        }
      }

      @media (min-width: $sb-breakpoint-l) {
        .#{$ns}col-l-#{$i} {
          @include sb-grid-item(#{$i}, $spacing);
        }
      }
    }
  }
}

// Push
//
// The `sb-push-{i}` classes can be used to push a column to the right.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-padding sb-col-5 sb-push-7">
//     .sb-col-5 .sb-push-7
//   </div>
//   <div class="sb-tile sb-padding sb-col-8 sb-push-4">
//     .sb-col-8 .sb-push-4
//   </div>
//   <div class="sb-tile sb-padding sb-col-4 sb-push-2">
//     .sb-col-4 .sb-push-2
//   </div>
//   <div class="sb-tile sb-padding sb-col-3 sb-push-3">
//     .sb-col-3 .sb-push-3
//   </div>
// </div>
//
// Styleguide grid.push

@for $i from 1 through $grid-columns {
  .#{$ns}push-#{$i} {
    margin-left: calc((100% / #{$grid-columns}) * #{$i} + (#{$gutter-width} / 2)) !important;
  }
}

// Pull
//
// The `sb-pull-{i}` classes can be used to pull a column to the left.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-padding sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-padding sb-col-10 sb-pull-2">
//     .sb-col-10 .sb-pull-2
//   </div>
//   <div class="sb-tile sb-padding sb-col-6">
//     .sb-col-6
//   </div>
//   <div class="sb-tile sb-padding sb-col-6 sb-pull-4">
//     .sb-col-6 .sb-pull-4
//   </div>
// </div>
//
// Styleguide grid.pull

@for $i from 1 through $grid-columns {
  .#{$ns}pull-#{$i} {
    margin-left: calc((100% / #{$grid-columns}) * #{-$i} + (#{$gutter-width} / 2)) !important;
  }
}

// Nesting
//
// To nest your content with the default grid, add a new `sb-grid` and set of `sb-col-*` columns within an existing `sb-col-*` column.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-padding sb-col-m-11">
//     Level 1: .sb-col-m-11
//     <div class="sb-grid">
//       <div class="sb-tile sb-padding sb-col-s-8 sb-col-m-7 sb-col-l-6">
//         Level 2: .sb-col-s-8 .sb-col-m-7 .sb-col-l-6
//       </div>
//       <div class="sb-tile sb-padding sb-col-s-4 sb-col-m-5 sb-col-l-6">
//         Level 2: .sb-col-s-4 .sb-col-m-5 .sb-col-l-6
//       </div>
//     </div>
//   </div>
// </div>
//
// Styleguide grid.nesting
