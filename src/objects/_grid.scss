/* stylelint-disable declaration-no-important */

// Grid
//
// A basic grid. Apply `sb-grid` to the wrapper element.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
// </div>
//
// Styleguide grid

$grid-columns: 12 !default;
$grid-gutter-width: 23px !default;

.#{$ns}grid {
  @include make-row;
}

// Containers
//
// Two container classes. All page containers should use `sb-container` will have a max-width based on viewport. <br />
// You can also use `sb-container-fluid` for full width containers.
//
// Markup:
// <div class="sb-container sb-tile">
//   .sb-container
// </div>
// <div class="sb-container-fluid sb-tile">
//   .sb-container-fluid
// </div>
//
// Styleguide grid.containers

$sb-container-s: (720px + $grid-gutter-width) !default;
$sb-container-m: (920px + $grid-gutter-width) !default;
$sb-container-l: (1900px + $grid-gutter-width) !default; // previous $sb-container (1920px)

.#{$ns}container {
  @include container-fixed;

  @media (min-width: $sb-breakpoint-s) {
    max-width: $sb-container-s;
  }

  @media (min-width: $sb-breakpoint-m) {
    max-width: $sb-container-m;
  }

  @media (min-width: $sb-breakpoint-l) {
    max-width: $sb-container-l;
  }
}

.#{$ns}container-fluid {
  @include container-fixed;
}

// Columns
//
// Column classes. Use `sb-col-#{i}` to set the desired column width.
// The columns will use the medium viewport as a breakpoint.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-col-12">
//     .sb-col-12
//   </div>
//   <div class="sb-tile sb-col-10">
//     .sb-col-10
//   </div>
//   <div class="sb-tile sb-col-2">
//     .sb-col-2
//   </div>
//   <div class="sb-tile sb-col-9">
//     .sb-col-9
//   </div>
//   <div class="sb-tile sb-col-3">
//     .sb-col-3
//   </div>
//   <div class="sb-tile sb-col-8">
//     .sb-col-8
//   </div>
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-col-7">
//     .sb-col-7
//   </div>
//   <div class="sb-tile sb-col-5">
//     .sb-col-5
//   </div>
//   <div class="sb-tile sb-col-6">
//     .sb-col-6
//   </div>
//   <div class="sb-tile sb-col-6">
//     .sb-col-6
//   </div>
// </div>
//
// Styleguide grid.columns

@include make-grid-columns;

// Responsive Grid
//
// To create a responsive grid you can add different column classes for different viewports. <br/>
// Add a `sb-col-s-#{i}` to set the desired column width for smaller viewports. <br/>
// Add a `sb-col-m-#{i}` to set the desired column width for medium viewports. <br/>
// Add a `sb-col-l-#{i}` to set the desired column width for larger viewports.
// Note: Using `sb-col-#{i}` will behave the same as using `sb-col-m-#{i}`. <br/>
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
//   <div class="sb-tile sb-col-s-12 sb-col-4 sb-col-l-3">
//     .sb-col-s-12 .sb-col-4 .sb-col-l-3
//   </div>
// </div>
//
// Styleguide grid.responsive

// Extra small grid
@include make-grid(xs);

// Small grid
@media (min-width: $sb-breakpoint-s) {
  @include make-grid(s);
}

// Makes `sb-col-#{i}` will behave like `sb-col-m-#{i}` for backwards compatibility
@for $i from 1 through $grid-columns {
  .#{$ns}col-#{$i} {
    @include make-m-column($i);
  }
}

// Medium grid
@media (min-width: $sb-breakpoint-m) {
  @include make-grid(m);
}

// Large grid
@media (min-width: $sb-breakpoint-l) {
  @include make-grid(l);
}

// Push
//
// The `sb-push-{i}` classes can be used to push a column to the right.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-col-3 sb-push-5">
//     .sb-col-3 .sb-push-5
//   </div>
//   <div class="sb-tile sb-col-6">
//     .sb-col-6
//   </div>
//   <div class="sb-tile sb-col-2 sb-push-2">
//     .sb-col-2 .sb-push-2
//   </div>
// </div>
//
// Styleguide grid.push

// Makes `sb-push-#{i}` will behave like `sb-col-m-push#{i}` for backwards compatibility
@for $i from 1 through $grid-columns {
  .#{$ns}push-#{$i} {
    @include make-m-column-push($i);
  }
}

// Pull
//
// The `sb-pull-{i}` classes can be used to pull a column to the left.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-col-4">
//     .sb-col-4
//   </div>
//   <div class="sb-tile sb-col-8 sb-pull-1">
//     .sb-col-10 .sb-pull-2
//   </div>
//   <div class="sb-tile sb-col-6">
//     .sb-col-6
//   </div>
//   <div class="sb-tile sb-col-6 sb-pull-4">
//     .sb-col-6 .sb-pull-4
//   </div>
// </div>
//
// Styleguide grid.pull

// Makes `sb-pull-#{i}` will behave like `sb-col-m-pull-#{i}` for backwards compatibility
@for $i from 1 through $grid-columns {
  .#{$ns}pull-#{$i} {
    @include make-m-column-pull($i);
  }
}

// Push / Pull
//
// The `sb-col-{size}-push-{i}` and `sb-col-{size}-pull-{i}` classes can be used to push or pull a column.
// It can be used to change the order of our built-in grid columns, as shown in example.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-col-m-9 sb-col-m-push-3">.sb-col-m-9 .sb-col-m-push-3</div>
//   <div class="sb-tile sb-col-m-3 sb-col-m-pull-9">.sb-col-m-3 .sb-col-m-pull-9</div>
// </div>
//
// Styleguide grid.pushpull

// Nesting
//
// To nest your content with the default grid, add a new `.sb-grid` and set of `.col-m-*` columns within an existing `.col-m-* column.
//
// Markup:
// <div class="sb-grid">
//   <div class="sb-tile sb-col-m-9">
//     Level 1: .sb-col-m-9
//     <div class="sb-grid">
//       <div class="sb-tile sb-col-s-8 sb-col-m-6">
//         Level 2: .sb-col-s-8 .sb-col-m-6
//       </div>
//       <div class="sb-tile sb-col-s-4 sb-col-m-6">
//         Level 2: .sb-col-s-4 .sb-col-m-6
//       </div>
//     </div>
//   </div>
// </div>
//
// Styleguide grid.nesting
